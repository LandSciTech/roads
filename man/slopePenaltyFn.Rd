% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getGraph.R
\name{slopePenaltyFn}
\alias{slopePenaltyFn}
\title{Grade penalty edge weight function}
\usage{
slopePenaltyFn(x1, x2, baseCost = 16178, limit = 10, penalty = 504)
}
\arguments{
\item{x1, x2}{Value of the input raster at two nodes. A difference of 1 implies a 100% slope.}

\item{baseCost}{Construction cost of 0% grade road.}

\item{limit}{Maximum grade (%) on which roads can be built.}

\item{penalty}{Cost increase associated with each additional % increase in road grade.}
}
\description{
Method for calculating the weight of an edge between two nodes
from the value of the input raster at each of those nodes (x1 and x2), designed for a single scaled DEM input.
The method assumes an input raster in which:
  NA indicates a road cannot be built
  Negative values are costs for crossing streams or other barriers that are crossable but expensive. Edges that link to barrier penalty (negative value) nodes are assigned the largest barrier penalty weight.
  All other values are interpreted as scaled elevation - a difference of 1 between two adjacent nodes is interpreted as 100% grade.
This is a simplified version of the grade penalty approach taken by Anderson and Nelson:
The approach does not distinguish between adverse and favourable grades.
Construction cost values are from the BC interior appraisal manual.
The approach ignores (unknown) grade penalties beside roads and barriers in order to
avoid increased memory and computational burden associated with multiple input rasters.
}
