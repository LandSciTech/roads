% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/projectRoads.R
\docType{methods}
\name{projectRoads}
\alias{projectRoads}
\alias{projectRoads,matrix-method}
\alias{projectRoads,RasterLayer-method}
\alias{projectRoads,SpatialPolygons-method}
\alias{projectRoads,SpatialPoints-method}
\alias{projectRoads,RasterStack-method}
\alias{projectRoads,RasterBrick-method}
\title{Project road network.}
\usage{
projectRoads(landings, cost = NULL, roads = NULL, roadMethod = "mst",
  plotRoads = T, sim = list())

\S4method{projectRoads}{matrix}(landings, cost = NULL, roads = NULL,
  roadMethod = "mst", plotRoads = T, sim = list())

\S4method{projectRoads}{RasterLayer}(landings, cost = NULL,
  roads = NULL, roadMethod = "mst", plotRoads = T, sim = list())

\S4method{projectRoads}{SpatialPolygons}(landings, cost = NULL,
  roads = NULL, roadMethod = "mst", plotRoads = T, sim = list())

\S4method{projectRoads}{SpatialPoints}(landings, cost = NULL,
  roads = NULL, roadMethod = "mst", plotRoads = T, sim = list())

\S4method{projectRoads}{RasterStack}(landings, cost = NULL,
  roads = NULL, roadMethod = "mst", plotRoads = T, sim = list())

\S4method{projectRoads}{RasterBrick}(landings, cost = NULL,
  roads = NULL, roadMethod = "mst", plotRoads = T, sim = list())
}
\arguments{
\item{landings}{RasterLayer, SpatialPolygons*, SpatialPointsDataFrame*, matrix, or RasterStack. Features to be connected to the road network. matrix should contain x,y,v columns, as returned by rasterToPoints etc. If RasterStack assume an ordered time-series.}

\item{cost}{RasterLayer. Cost surface.}

\item{roads}{RasterLayer. Existing road network.}

\item{roadMethod}{Character. Options are "mst", "lcp", "snap".}

\item{plotRoads}{Boolean. Set FALSE to save time if output road rasters are not required. Default TRUE}

\item{sim}{Sim list. Returned from a previous iteration of projectRoads. cost, roads, and roadMethod are ignored if a sim list is provided.}
}
\value{
sim list.

sim list.

sim list.

sim list.

RasterBrick. Road network over time.

RasterBrick. Road network over time.
}
\description{
Project road network.
}
\details{
some details...
}
\examples{

## visualize function's height parameter represents graphics window height in cm.
## Increase it for larger visualizations.

### using:  scenario 1 / SpatialPointsDataFrame landings / least-cost path ("lcp")
scen <- demoScen[[1]] # demo scenario 1
land.pnts <- scen$landings.points[scen$landings.points$set==1,] # landing set 1 of scenario 1
prRes <- projectRoads(landings=land.pnts,cost=scen$cost.rast,roads=scen$road.rast,roadMethod="lcp")
visualize(scen$cost.rast,land.pnts,prRes,height=15)

### using: scenario 1 / RasterLayer landings / minimum spanning tree ("mst")
scen <- demoScen[[1]] # demo scenario 1
land.rLyr <- scen$landings.stack[[1]] # the RasterLayer version of landing set 1 of scenario 1
prRes <- roads::projectRoads(landings=land.rLyr,cost=scen$cost.rast,roads=scen$road.rast,roadMethod="mst")
visualize(scen$cost.rast,land.rLyr,prRes)

### using: scenario 2 / matrix landings / snapping ("snap")
scen <- demoScen[[2]] # demo scenario 2
land.mat  <- scen$landings.points[scen$landings.points$set==5,]@coords  # landing set 5 of scenario 2, as matrix
prRes <- projectRoads(landings=land.mat,cost=scen$cost.rast,roads=scen$road.rast,roadMethod="snap")
visualize(scen$cost.rast,land.mat,prRes,height=15)

### project roads: using scenario 3 / RasterStack landings / minimum spanning tree ("mst")
scen <- demoScen[[3]] # demo scenario 3
land.rstack <- scen$landings.stack[[1:4]]  # landing sets 1 to 4 of scenario 3, as RasterStack
prRes <- projectRoads(landings=land.rstack,cost=scen$cost.rast,roads=scen$road.rast,roadMethod="mst")
visualize(scen$cost.rast,land.rstack,prRes,height=15)

### project roads: using scenario 7 / SpatialPolygonsDataFrame landings / minimum spanning tree ("mst")
scen <- demoScen[[7]] # demo scenario 7
land.poly <- scen$landings.poly # polygonal landings of demo scenario 7
prRes <- projectRoads(landings=land.poly,cost=scen$cost.rast,roads=scen$road.rast,roadMethod="mst")
visualize(scen$cost.rast,land.poly,prRes,height=15)

}
